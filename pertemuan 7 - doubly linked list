class Node:
    def __init__(self, value):
      self.value = value
      self.next = None
      self.prev = None
 
class DoublyLinkedList:
    def __init__(self, value):
       new_node = Node(value)
       self.head = new_node
       self.tail = new_node
       self.length = 1
       
    def print_list(self):
        temp = self.head
        while temp is not None:
            print(temp.value)
            temp = temp.next
    
    def append(self,value):
        new_node = Node(value)
        if self.head is None:
            self.head = new_node
            self.tail = new_node
        else:
            self.tail.next = new_node
            new_node.prev = self.tail
            self.tail = new_node
        self.length += 1
        return True
    def pop(self):
        if self.length == 0:
            return None
        temp = self.tail
        if self.length == 1:
            self.head = None
            self.tail = None 
        else: 
            self.tail = self.tail.prev
            self.tail.next = None
            temp.prev = None
        self.length -= 1
        return temp

    def prepend(self, value):
        new_node = Node(value)
        if self.length == 0:
            self.head = new_node
            self.tail = new_node
        else:
            new_node.next = self.head
            self.head.prev = new_node
            self.head = new_node
        self.length += 1
        return True
    
    def pop_first(self):
        if self.length == 0:
            return None
        temp = self.head
        if self.length == 1:
            self.head = None
            self.tail = None
        else:
            self.head = self.head.next
            self.head.prev = None
            temp.next = None 
        self.length -= 1
        return temp
    
    def get(self, index):
        if index < 0 or index >= self.length:
            return None
        temp = self.head
        if index < self.length/2:
            for _ in range(index):
                temp = temp.next
        else:
            temp = self.tail
            for _ in range(self.length - 1, index, -1):
                temp = temp.prev 
        return temp
    
    def set_value(self, index, value):
        temp = self.get(index)
        if temp:
            temp.value = value
        return True
        return False

print("=====================================")
print("original :")
my_doubly_linked_list = DoublyLinkedList(7)
print('Head:', my_doubly_linked_list.head.value)
print('Tail:', my_doubly_linked_list.tail.value)
print('Length:', my_doubly_linked_list.length)
print("=====================================")
my_doubly_linked_list.append(4)
my_doubly_linked_list.append(4)
print("list setelah di append : ")
my_doubly_linked_list.print_list()
print('Head:', my_doubly_linked_list.head.value)
print('Tail:', my_doubly_linked_list.tail.value)
print('Length:', my_doubly_linked_list.length)
print("=====================================")
print("list setelah di pop : ")
print(my_doubly_linked_list.pop().value)
print(my_doubly_linked_list.pop().value)
print(my_doubly_linked_list.pop().value)
print(my_doubly_linked_list.pop())
print("=====================================")
my_doubly_linked_list = DoublyLinkedList(2)
my_doubly_linked_list.append(3)
print('sebelum prepend():')
print('----------------')
print('Head:', my_doubly_linked_list.head.value)
print('Tail:', my_doubly_linked_list.tail.value)
print('Length:', my_doubly_linked_list.length, '\n')
print('Doubly Linked List:')
my_doubly_linked_list.print_list()
my_doubly_linked_list.prepend(1)
print('setelah prepend():')
print('---------------')
print('Head:', my_doubly_linked_list.head.value)
print('Tail:', my_doubly_linked_list.tail.value)
print('Length:', my_doubly_linked_list.length, '\n')
print('Doubly Linked List:')
my_doubly_linked_list.print_list()
print("=====================================")
print("setelah di pop first : ")
my_doubly_linked_list = DoublyLinkedList(7)
my_doubly_linked_list.append(2)
my_doubly_linked_list.append(4)
print(my_doubly_linked_list.pop_first().value)
print(my_doubly_linked_list.pop_first().value)
print(my_doubly_linked_list.pop_first().value)
print(my_doubly_linked_list.pop_first())
print("=====================================")
print("fungsi get : ")
my_doubly_linked_list = DoublyLinkedList(7)
my_doubly_linked_list.append(2)
my_doubly_linked_list.append(4)
my_doubly_linked_list.append(6)

print('percobaan pertama get : ')
print(my_doubly_linked_list.get(1).value)
print('percobaan kedua dengan get :')
print(my_doubly_linked_list.get(2).value)
print("=====================================")
my_doubly_linked_list = DoublyLinkedList(11)
my_doubly_linked_list.append(3)
my_doubly_linked_list.append(23)
my_doubly_linked_list.append(7)
my_doubly_linked_list.append(4)

print('sebelum menggunakan fungsi set : ')
my_doubly_linked_list.print_list()
my_doubly_linked_list.set_value(1,9)
print('setelah menggunakan fungsi set : ')
my_doubly_linked_list.print_list()
print("=====================================")
