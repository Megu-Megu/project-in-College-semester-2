class Node :
    def __init__(self, value):
        self.value = value
        self.next = None

class LinkedList:
    def __init__(self,value):
        new_node = Node(value)
        self.head = new_node
        self.tail = new_node
        self.length = 1

    def print_list(self):
        temp = self.head
        while temp is not None:
            print(temp.value)
            temp = temp.next
    def append(self,value):
        new_node = Node(value)
        if self.length == 0 :
            self.head = new_node
            self.tail = new_node
        else:
            self.tail.next = new_node
            self.tail = new_node
        self.length += 1
        return True

    def prepend(self, value):
        new_node = Node(value)
        if self.length == 0:
            self.head = new_node
            self.tail = new_node
        else :
            new_node.next = self.head
            self.head = new_node
        self.length += 1
        return True

    def pop(self):
        if self.length == 0:
            return None
        temp = self.head
        pre = self.head
        while(temp.next):
            pre = temp
            temp = temp.next
        self.tail = pre
        self.tail.next = None
        self.length -= 1
        if self.length == 0:
            self.head = None
            self.tail = None
        return temp
    
    def pop_first (self):
        if self.length == 0:
            return None
        temp = self.head
        self.head = self.head.next
        temp.next = None
        self.length -= 1
        if self.length == 0:
            self.tail = None
        return temp
    def get(self,index):
        if index < 0 or index >= self.length:
            return None
        temp = self.head
        for _ in range(index):
            temp = temp.next
        return temp
   
print("=====================================")
print("sebelum di prepend")
print("=====================================")
my_linked_list = LinkedList(4)
my_linked_list.append(3)
my_linked_list.append(23)
my_linked_list.append(36)
print("head : " , my_linked_list.head.value)
print("Tail : " , my_linked_list.tail.value)
print("Length : " , my_linked_list.length)
my_linked_list.print_list()
print("=====================================")
my_linked_list.prepend(9)
print("setelah di prepend")
print("=====================================")
print("head : " , my_linked_list.head.value)
print("Tail : " , my_linked_list.tail.value)
print("Length : " , my_linked_list.length)
my_linked_list.print_list()
print("=====================================")
print("setelah di pop ( pop adalah menghapus data dari depan / head)")
print("=====================================")
print("angka yang di hapus")
print("=====================================")
print(my_linked_list.pop_first().value)
print(my_linked_list.pop_first().value)
print(my_linked_list.pop().value)
print("=====================================")
print("list setelah di pop jadi seperti ini")
print("=====================================")
print("hasil get")
print("=====================================")
print(my_linked_list.get(1).value)
